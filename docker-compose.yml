version: "3.7"

services:
  api:
    image: juancalle/interview-api
    build:
      context: ./api/
      dockerfile: dockerization/Dockerfile
      target: deploy
    working_dir: /workspace
    command: python3 -m api.main
    volumes:
      - ./api/src:/workspace
      - ./api/_media:/media
      - ./api/resources:/resources
    network_mode: "host"
    restart: unless-stopped
    user: "${UID}:${GID}"
    environment:
      - DATABASE_NAME
      - DATABASE_USER
      - DATABASE_PASSWORD
      - DATABASE_PORT
      - DATABASE_HOST
      - MEDIA_DIRECTORY=/media
      - APP_PORT=9060


  mongodb:
    image: mongo
    ports:
      - "${MONGO_PORT}:27017"
    restart: always
    volumes:
      - ./_mongo_database:/data/db
    user: "${UID}:${GID}"
    environment:
      - MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD
  mongo-express:
    image: mongo-express
    depends_on:
      - mongodb
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=${MONGO_PORT}
      - ME_CONFIG_BASICAUTH
      - ME_CONFIG_BASICAUTH_USERNAME
      - ME_CONFIG_BASICAUTH_PASSWORD
      - ME_CONFIG_MONGODB_ENABLE_ADMIN
      - ME_CONFIG_MONGODB_AUTH_DATABASE
      - ME_CONFIG_MONGODB_AUTH_USERNAME
      - ME_CONFIG_MONGODB_AUTH_PASSWORD
    ports:
      - "${ME_PORT}:8081"
    restart: always
    user: "${UID}:${GID}"

  # redis:
  #   image: redis:7.2.2
  #   container_name: redis
  #   restart: always
  #   volumes:
  #     - redis_volume_data:/data
  #   ports:
  #     - 6379:6379